- name: Install packages (debs)
  when: ansible_distribution in ["Debian", "Ubuntu"]
  apt:
    name: 
       - htop
       - zsh
       - apt-transport-https
       - ca-certificates
       - curl
       - gnupg-agent
       - software-properties-common
       - cockpit
       - cockpit-machines
       - wget
       - neofetch
       - qemu-kvm
       - libvirt-clients
       - libvirt-daemon-system
       - bridge-utils
       - virtinst
       - libvirt-daemon
       - virt-manager
       - net-tools
       - nfs-common
       - openssh-server

# - name: Install packages (swupd)
#   when: ansible_distribution in ["Clear Linux OS"]
#   swupd:
#     name: kvm-kernel
#     state: present

# - name: Install packages (swupd)
#   when: ansible_distribution in ["Clear Linux OS"]
#   swupd:
#     name: kvm-kernel
#     state: present

- name: Install packages (swupd)
  when: ansible_distribution in ["Clear Linux OS"]
  swupd:
    name: nfs-utils
    state: present

- name: Install packages (swupd)
  when: ansible_distribution in ["Clear Linux OS"]
  swupd:
    name: wget
    state: present

- name: Install packages (swupd)
  when: ansible_distribution in ["Clear Linux OS"]
  swupd:
    name: sysadmin-basic
    state: present

- name: Install packages (swupd)
  when: ansible_distribution in ["Clear Linux OS"]
  swupd:
    name: sysadmin-remote
    state: present

- name: Install packages (swupd)
  when: ansible_distribution in ["Clear Linux OS"]
  swupd:
    name: curl
    state: present

- name: Install packages (swupd)
  when: ansible_distribution in ["Clear Linux OS"]
  swupd:
    name: virt-manager
    state: present

- name: Install libvirt (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: libvirt-daemon
    state: present

- name: libvirt is running
  when: ansible_distribution in ["Alpine"]
  service:
    name: libvirtd
    enabled: yes
    state: started

- name: Install nfs-utils (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: nfs-utils
    state: present

- name: nfs-client is running
  when: ansible_distribution in ["Alpine"]
  service:
    name: nfsmount
    enabled: yes
    state: started

- name: Install qemu (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: qemu-img
    state: present

- name: Install bridge (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: bridge
    state: present

- name: Install htop (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: htop
    state: present

- name: Install pciutils (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: pciutils
    state: present

- name: Install rsync (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: rsync
    state: present

- name: Install mosquitto-clients (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: mosquitto-clients
    state: present

- name: Install neofetch (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: neofetch
    state: present

- name: Install sudo (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: sudo
    state: present

- name: Install glances (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: glances
    state: present

- name: Install qemu-sys (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: qemu-system-x86_64
    state: present

- name: Install util-linux (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: util-linux
    state: present

- name: Install docker (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: docker
    state: present
    
- name: Install go (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: go
    state: absent

- name: docker is running
  when: ansible_distribution in ["Alpine"]
  service:
    name: docker
    enabled: yes
    state: started

- name: cron is running
  when: ansible_distribution in ["Alpine"]
  service:
    name: crond
    enabled: yes
    state: started

- name: mini_httpd is running
  when: ansible_distribution in ["Alpine"]
  service:
    name: mini_httpd
    enabled: yes
    state: started

- name: Install docker (apks)
  when: ansible_distribution in ["Alpine"]
  apk:
    name: docker-compose
    state: present


